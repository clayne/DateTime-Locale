name: Run tests

on: [push, pull_request]

jobs:
  build-release-tarball:
    name: Build release tarball
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: shogo82148/actions-setup-perl@v1
        id: setup-perl
        with:
          perl-version: latest
          enable-modules-cache: false

      - name: Save Perl Info
        id: save-perl-info
        run: |
          perl -e 'my $inc = join "\n", @INC; print "perl-inc<<EOF-1\n$inc\nEOF-1\n"' >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        with:
          path: |
            ${{ steps.save-perl-info.outputs.perl-inc }}
            /opt/hostedtoolcache/perl/${{ steps.setup-perl.outputs.perl-version }}/x64/bin/dzil
          key: |
            build-release-tarball-perl-libs-${{ steps.setup-perl.outputs.perl-hash }}-${{ hashFiles('dist.ini') }}
          restore-keys: |
            build-release-tarball-perl-libs-${{ steps.setup-perl.outputs.perl-hash }}

      - name: Install Dist::Zilla and Test::Harness
        run: cpm install --global Dist::Zilla Test::Harness

      - name: Generate list of author deps
        run: dzil authordeps > /tmp/dzil-authordeps.txt

      - uses: actions/upload-artifact@v4
        with:
          name: dzil-authordeps.txt
          path: /tmp/dzil-authordeps.txt

      - name: Install author deps
        run: |
          cpm install --show-build-log-on-failure --global $(cat /tmp/dzil-authordeps.txt)

      - name: Build release tarball
        run: dzil build

      - uses: actions/upload-artifact@v4
        with:
          name: "DateTime-Locale.tar.gz"
          path: "*.tar.gz"

  author-tests:
    needs: build-release-tarball
    name: Author tests with latest Perl
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: "DateTime-Locale.tar.gz"

      - name: Untar release tarball
        run: |
          set -e
          set -x

          tar -xvzf DateTime-Locale-*.tar.gz
          mv DateTime-Locale-*/* .
          rm -fr DateTime-Locale-*

      - uses: shogo82148/actions-setup-perl@v1
        id: setup-perl
        with:
          perl-version: latest
          enable-modules-cache: false

      - name: Install mise
        run: |
          set -e
          set -x

          curl https://mise.run | sh
          mise install

      - name: Install aspell
        run: |
          set -e
          set -x

          sudo apt-get -y update
          sudo apt-get -y install aspell

      - name: Save Perl info
        id: save-perl-info
        run: |
          perl -e 'my $inc = join "\n", @INC; print "perl-inc<<EOF\n$inc\nEOF"' >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        with:
          # We need the perl bin dir for things like `perltidy`.
          path: |
            ${{ steps.save-perl-info.outputs.perl-inc }}
            /opt/hostedtoolcache/perl/${{ steps.setup-perl.outputs.perl-version }}/x64/bin
          key: |
            build-release-tarball-perl-libs-${{ steps.setup-perl.outputs.perl-hash }}-${{ hashFiles('dist.ini') }}-${{ hashFiles('cpanfile') }}
          restore-keys: |
            build-release-tarball-perl-libs-${{ steps.setup-perl.outputs.perl-hash }}-${{ hashFiles('dist.ini') }}
            build-release-tarball-perl-libs-${{ steps.setup-perl.outputs.perl-hash }}

      - uses: actions/upload-artifact@v4
        with:
          name: dzil-listdeps.txt
          path: /tmp/dzil-listdeps.txt

      - name: Install module deps
        run: |
          cpm install --show-build-log-on-failure --global --with-all --cpanfile ./cpanfile

      - name: Run tests
        run: |
          AUTOMATED_TESTING=1 \
              AUTHOR_TESTING=1 \
              EXTENDED_TESTING=1 \
              RELEASE_TESTING=1 \
              mise exec -- prove -lr -j 24 t/ xt/

  test-matrix:
    needs: build-release-tarball
    name: ${{ matrix.os-and-perl.os-name }} with Perl ${{ matrix.os-and-perl.perl-version }}
    runs-on: ${{ matrix.os-and-perl.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os-and-perl:
          - os-name: Linux
            runs-on: ubuntu-latest
            perl-version: "5.10.1"

          - os-name: macOS
            runs-on: macos-latest
            perl-version: latest

          - os-name: Windows
            runs-on: windows-latest
            perl-version: latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: "DateTime-Locale.tar.gz"

      - name: Untar release tarball
        shell: bash
        run: |
          set -e
          set -x

          tar -xvzf DateTime-Locale-*.tar.gz
          mv DateTime-Locale-*/* .
          rm -fr DateTime-Locale-*

      - uses: shogo82148/actions-setup-perl@v1
        id: setup-perl
        with:
          perl-version: ${{ matrix.os-and-perl.perl-version }}
          enable-modules-cache: false

      - name: Save Perl Info
        id: save-perl-info
        shell: bash
        run: |
          perl -e 'my $inc = join "\n", @INC; print "perl-inc<<EOF\n$inc\nEOF"' >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v4
        with:
          path: |
            ${{ steps.save-perl-info.outputs.perl-inc }}
          key: |
            build-release-tarball-perl-libs-${{ steps.setup-perl.outputs.perl-hash }}-${{ hashFiles('cpanfile') }}
          restore-keys: |
            build-release-tarball-perl-libs-${{ steps.setup-perl.outputs.perl-hash }}

      - name: Install module deps
        # If we use bash on windows, cpm blows up in weird ways from missing prereqs.
        run: |
          cpm install --show-build-log-on-failure --global --cpanfile ./cpanfile

      - name: Run tests
        # If we use bash on Windows we get an error that prove is not in the $PATH.
        run: |
          prove -lr -j 24 t/
